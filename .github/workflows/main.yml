name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: dependencies-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm ci

  build:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: dependencies-${{ hashFiles('package-lock.json') }}

      - name: Build
        run: npm run build

  lint:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: dependencies-${{ hashFiles('package-lock.json') }}

      - name: Lint
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: dependencies-${{ hashFiles('package-lock.json') }}

      - name: Run tests
        run: npm run test -- --runInBand --no-cache

  coverage:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: dependencies-${{ hashFiles('package-lock.json') }}

      - name: Run coverage tests
        run: npm run test:coverage -- --runInBand --no-cache

      - name: Save coverage folder
        uses: actions/cache@v3
        with:
          path: coverage
          key: coverage-${{ github.sha }}

  codecov:
    runs-on: ubuntu-latest
    needs: coverage
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: dependencies-${{ hashFiles('package-lock.json') }}

      - name: Restore coverage cache
        uses: actions/cache@v3
        with:
          path: coverage
          key: coverage-${{ github.sha }}

      - name: Upload to Codecov
        run: npx codecov

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.8.1
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: dependencies-${{ hashFiles('package-lock.json') }}

      - name: Set Git config
        run: |
          git config user.email "amoseui@gmail.com"
          git config user.name "Amos Lim"

      - name: Deploy
        run: npm run deploy

