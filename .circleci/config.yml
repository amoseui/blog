version: 2

defaults: &defaults
  docker:
    - image: cimg/node:18.12.1
  resource_class: large
  working_directory: ~/blog

jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package-lock.json" }}
      - run: npm ci
      - save_cache:
          paths:
            - node_modules
          key: dependencies-{{ checksum "package-lock.json" }}

  lint:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package-lock.json" }}
      - run: npm run lint

  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package-lock.json" }}
      - run: npm run test --runInBand --no-cache

  coverage:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package-lock.json" }}
      - run: npm run test:coverage --runInBand --no-cache
      - save_cache:
          key: coverage-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - coverage

  codecov:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package-lock.json" }}
      - restore_cache:
          keys:
            - coverage-{{ .Environment.CIRCLE_SHA1 }}
      - run: npx codecov

  deploy:
    <<: *defaults
    steps:
      - add_ssh_keys:
          fingerprints:
            - "52:ed:f7:66:cb:9e:58:db:37:13:f3:6f:c4:0a:9f:42"
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package-lock.json" }}
      - run:
          command: |
            git config user.email "amoseui@gmail.com"
            git config user.name "Amos Lim"
            npm run deploy


workflows:
  version: 2
  build:
    jobs:
      - install
      - lint:
          requires:
            - install
      - test:
          requires:
            - install
      - coverage:
          requires:
            - install
      - codecov:
          requires:
            - coverage
     - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - master
