{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/chromium-css-supports-allow-empty-parentheses","result":{"data":{"markdownRemark":{"id":"7f1dc2f3-bb6c-5522-b236-4795734e3e31","html":"<h3 id=\"관련-링크\" style=\"position:relative;\"><a href=\"#%EA%B4%80%EB%A0%A8-%EB%A7%81%ED%81%AC\" aria-label=\"관련 링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>관련 링크</h3>\n<ul>\n<li>제목: Allow empty parentheses in @supports evaluating to false</li>\n<li>패치: <a href=\"https://chromium-review.googlesource.com/c/chromium/src/+/4629330\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://chromium-review.googlesource.com/c/chromium/src/+/4629330</a></li>\n<li>버그\n<ul>\n<li><a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1158554\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://bugs.chromium.org/p/chromium/issues/detail?id=1158554</a></li>\n<li><a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1269284\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://bugs.chromium.org/p/chromium/issues/detail?id=1269284</a></li>\n</ul>\n</li>\n<li>w3c spec change: <a href=\"https://github.com/w3c/csswg-drafts/pull/6799\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/w3c/csswg-drafts/pull/6799</a></li>\n<li>mdn web docs: <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@supports\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/en-US/docs/Web/CSS/@supports</a></li>\n</ul>\n<h3 id=\"개요\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-label=\"개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요</h3>\n<p>CSS 에서 <code class=\"language-text\">@supports</code> 문법을 활용하면 브라우저가 해당 속성을 지원하는지 여부에 따라 속성 값을 선언할 수 있다. <code class=\"language-text\">@supports</code> 뒤에는 조건이 올 수도 있고, <code class=\"language-text\">selector</code> 와 같은 함수가 올 수도 있다. <code class=\"language-text\">and</code>, <code class=\"language-text\">or</code>, <code class=\"language-text\">not</code> 등의 연산자도 사용 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@supports</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@supports</span> <span class=\"token function\">unknown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위와 같은 경우 <code class=\"language-text\">@supports</code> 최후의 파싱 규칙인 <code class=\"language-text\">&lt;general-enclosed></code> 을 따르게 되는데 이 때 값이 없는 인자를 가진 임의의 함수나 빈 괄호가 선언되어 있는 경우 unsupported 를 리턴하도록 스펙에 명시되어 있다. 하지만 현재 Chromium 에서는 이 경우에 parsing failure error 를 리턴하고 있다.</p>\n<h3 id=\"내용\" style=\"position:relative;\"><a href=\"#%EB%82%B4%EC%9A%A9\" aria-label=\"내용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내용</h3>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\">&lt;general-enclosed> = [ &lt;function-token> &lt;any-value>? <span class=\"token punctuation\">)</span> ]\n                 | <span class=\"token punctuation\">(</span> &lt;any-value>? <span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">&lt;any-value>?</code> 에서 <code class=\"language-text\">?</code> 는 optional 을 뜻한다. 값이 있어도 되고, 없어도 된다는 뜻이다. 기존 Chromium 에서는 <code class=\"language-text\">&lt;any-value></code> 에 <code class=\"language-text\">?</code> 가 없는 규칙에 맞춰 구현되어 있었다. <code class=\"language-text\">&lt;general-enclosed></code> 은 1) <code class=\"language-text\">&lt;function-token></code> (<code class=\"language-text\">(</code> 포함) 으로 시작하여 <code class=\"language-text\">&lt;any-value></code> 또는 빈 값 후 <code class=\"language-text\">)</code> 으로 닫히거나, 2) <code class=\"language-text\">()</code> 안에 <code class=\"language-text\">&lt;any-value></code> 가 있거나 빈 값인 경우 2가지에 대하여 unsupported 를 리턴한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">auto</span> block <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">ConsumeUntilPeekedTypeIs</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>kRightParenthesisToken<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 추가한 코드</span>\nblock<span class=\"token punctuation\">.</span><span class=\"token function\">ConsumeWhitespace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span><span class=\"token function\">AtEnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> Result<span class=\"token double-colon punctuation\">::</span>kUnsupported<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위에서 <code class=\"language-text\">ConsumeUntilPeekedTypeIs</code> 함수는 <code class=\"language-text\">kRightParenthesisToken</code>(<code class=\"language-text\">)</code>) 토큰이 나올 떄까지 <code class=\"language-text\">stream</code> 을 consume 하여 <code class=\"language-text\">CSSParserTokenRange</code> 타입의 <code class=\"language-text\">block</code> 을 리턴한다. 이렇게 하면 <code class=\"language-text\">(</code> 다음부터 가장 마지막 <code class=\"language-text\">)</code> 전까지의 <code class=\"language-text\">CSSParserTokenRange</code> 값을 받아올 수 있다. 그 다음 <code class=\"language-text\">ConsumeWhitespace</code> 함수로 <code class=\"language-text\">block</code> 의 whitespace 를 제거한다. <code class=\"language-text\">block</code> 이 끝까지 consume 된 상태라면 <code class=\"language-text\">block</code> 은 whitespace 로만 이루어져 있다고 볼 수 있다. 이 경우 <code class=\"language-text\">kUnsupported</code> 를 리턴하여 함수 안에 빈 값이거나 괄호 안에 빈 값이 있는 케이스에 대하여 처리할 수 있다.</p>\n<h3 id=\"테스트\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트</h3>\n<ul>\n<li>third_party/blink/web_tests/external/wpt/css/css-conditional/js/supports-conditionText.html</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">FAIL conditionText getter for @supports () assert_equals: expected 1 but got 0\nFAIL conditionText getter for @supports func() assert_equals: expected 1 but got 0\nFAIL conditionText getter for @supports (()) assert_equals: expected 1 but got 0\nFAIL conditionText getter for @supports (func()) assert_equals: expected 1 but got 0</code></pre></div>\n<ul>\n<li>third_party/blink/web_tests/external/wpt/css/css-conditional/css-supports-040.xht</li>\n<li>third_party/blink/web_tests/external/wpt/css/css-conditional/css-supports-041.xht</li>\n</ul>\n<p>코드를 수정하면서 WPT 에서 빈 ()에 대한 케이스를 많이 수정할 수 있었다. blink unit test 에도 <code class=\"language-text\">()</code> <code class=\"language-text\">( )</code> <code class=\"language-text\">asdf()</code> 와 같은 테스트 케이스도 추가하였다.</p>\n<h3 id=\"코드-리뷰\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C-%EB%A6%AC%EB%B7%B0\" aria-label=\"코드 리뷰 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드 리뷰</h3>\n<p>blink unit test 에서 <code class=\"language-text\">(</code> 만 선언되어 있는 경우 <code class=\"language-text\">kParseFailure</code> 를 리턴하도록 되어 있었다. 기존 테스트 코드를 깨지 않기 위해 <code class=\"language-text\">)</code> 토큰이 아예 없는 경우에 대한 예외처리 코드를 넣었었다. 리뷰어가 <code class=\"language-text\">)</code>가 보장되어 있기 때문에 불필요한 예외처리라고 댓글을 남겼다. 기존에 있던 테스트 코드 때문에 넣었다고 리뷰어에게 설명을 하면서 테스트를 고치면 될지 물어보았다. <code class=\"language-text\">(</code> 도 <code class=\"language-text\">&lt;general-enclosed></code> 로 간주된다고 하여 예외처리를 삭제하고 테스트 케이스를 변경하였다.</p>\n<h3 id=\"후기\" style=\"position:relative;\"><a href=\"#%ED%9B%84%EA%B8%B0\" aria-label=\"후기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>후기</h3>\n<p>최종적으로 반영한 코드는 몇 줄 안 되지만 예외처리를 생각하는 과정에서 CSS Rule Parser 에 대해 조금 더 깊게 볼 수 있었다. 다른 패치를 반영할 때도 도움이 많이 될 것 같다.</p>","fields":{"slug":"/posts//chromium-css-supports-allow-empty-parentheses","tagSlugs":["/tag/opensource/","/tag/chromium/","/tag/css/","/tag/w3c/","/tag/wpt/"]},"frontmatter":{"date":"2023-06-22T20:30:00.000Z","description":"2023년 Chromium 에 반영한 세 번째 패치 내용 정리","tags":["opensource","chromium","css","w3c","wpt"],"title":"Chromium Contribution: CSS @supports <general-enclosed> rule 에서 비어있는 () 허용","socialImage":null}}},"pageContext":{"slug":"/posts//chromium-css-supports-allow-empty-parentheses"}},"staticQueryHashes":["251939775","2702970128","401334301"]}