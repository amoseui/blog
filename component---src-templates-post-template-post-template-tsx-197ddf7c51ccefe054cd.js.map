{"version":3,"file":"component---src-templates-post-template-post-template-tsx-197ddf7c51ccefe054cd.js","mappings":"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","sources":["webpack://blog/./src/components/Button/Button.tsx","webpack://blog/./src/components/Button/Button.module.scss","webpack://blog/./src/components/Post/Comments/GiscusComments/GiscusComments.tsx","webpack://blog/./src/components/Post/Comments/Comments.tsx","webpack://blog/./src/components/Post/Content/Content.tsx","webpack://blog/./src/components/Post/Content/Content.module.scss","webpack://blog/./src/components/Post/Meta/Meta.tsx","webpack://blog/./src/components/Post/Meta/Meta.module.scss","webpack://blog/./src/components/Post/Tags/Tags.tsx","webpack://blog/./src/components/Post/Tags/Tags.module.scss","webpack://blog/./src/components/Post/Post.tsx","webpack://blog/./src/components/Post/Post.module.scss","webpack://blog/./src/templates/PostTemplate/PostTemplate.tsx"],"sourcesContent":["import React from \"react\";\n\nimport cn from \"classnames\";\nimport { Link } from \"gatsby\";\n\nimport * as styles from \"./Button.module.scss\";\n\ninterface Props {\n  className?: string;\n  title: string;\n  to: string;\n}\n\nconst Button: React.FC<Props> = ({ className, title, to }: Props) => (\n  <Link className={cn(styles.button, className)} to={to}>\n    {title}\n  </Link>\n);\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport var button = \"Button-module--button--b1113\";","import React, { createRef, useLayoutEffect } from \"react\";\n\nimport { useTheme } from \"@/hooks\";\n\nconst src = \"https://giscus.app/client.js\";\nconst giscusSelector = \"iframe.giscus-frame\";\n\nconst GiscusComments: React.FC = () => {\n  const containerRef = createRef();\n\n  const [{ mode }] = useTheme();\n  const themeMode = mode === \"dark\" ? \"dark\" : \"light\";\n\n  useLayoutEffect(() => {\n    const createGiscusEl = () => {\n      const giscusScript = document.createElement(\"script\");\n\n      const attributes = {\n        src,\n        \"data-repo\": \"amoseui/blog\",\n        \"data-repo-id\": \"MDEwOlJlcG9zaXRvcnk0MjM4NTYyNw==\",\n        \"data-category\": \"Comments\",\n        \"data-category-id\": \"DIC_kwDOAobA284CXVz8\",\n        \"data-mapping\": \"pathname\",\n        \"data-strict\": \"0\",\n        \"data-reactions-enabled\": \"1\",\n        \"data-emit-metadata\": \"0\",\n        \"data-input-position\": \"bottom\",\n        \"data-theme\": themeMode,\n        \"data-lang\": \"en\",\n        crossorigin: \"anonymous\",\n        async: \"true\",\n      };\n\n      Object.entries(attributes).forEach(([key, value]) => {\n        giscusScript.setAttribute(key, value);\n      });\n\n      if (containerRef.current) {\n        containerRef.current.appendChild(giscusScript);\n      }\n    };\n\n    const giscusEl = containerRef.current.querySelector(giscusSelector);\n    const postThemeMessage = () => {\n      const message = {\n        setConfig: {\n          theme: themeMode,\n        },\n      };\n      giscusEl.contentWindow.postMessage(\n        { giscus: message },\n        \"https://giscus.app\",\n      );\n    };\n\n    if (giscusEl) {\n      postThemeMessage();\n    } else {\n      createGiscusEl();\n    }\n  }, [themeMode]);\n\n  return <div ref={containerRef} />;\n};\n\nGiscusComments.displayName = \"GiscusComments\";\n\nexport default GiscusComments;\n","import React from \"react\";\n\nimport { useSiteMetadata } from \"@/hooks\";\n\nimport { GiscusComments } from \"./GiscusComments\";\n\nconst Comments: React.FC = () => {\n  const { giscus } = useSiteMetadata();\n\n  if (!giscus) {\n    return null;\n  }\n\n  return <GiscusComments />;\n};\n\nexport default Comments;\n","import React from \"react\";\n\nimport * as styles from \"./Content.module.scss\";\n\ninterface Props {\n  title: string;\n  body: string;\n}\n\nconst Content: React.FC<Props> = ({ body, title }: Props) => (\n  <div className={styles.content}>\n    <h1 className={styles.title}>{title}</h1>\n    <div className={styles.body} dangerouslySetInnerHTML={{ __html: body }} />\n  </div>\n);\n\nexport default Content;\n","// extracted by mini-css-extract-plugin\nexport var body = \"Content-module--body--726c2\";\nexport var content = \"Content-module--content--80d58\";\nexport var title = \"Content-module--title--09504\";","import React from \"react\";\n\nimport * as styles from \"./Meta.module.scss\";\n\ninterface Props {\n  date: string;\n}\n\nconst Meta: React.FC<Props> = ({ date }: Props) => (\n  <div className={styles.meta}>\n    <p className={styles.date}>\n      Published{\" \"}\n      {new Date(date).toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      })}\n    </p>\n  </div>\n);\n\nexport default Meta;\n","// extracted by mini-css-extract-plugin\nexport var date = \"Meta-module--date--4d30d\";\nexport var meta = \"Meta-module--meta--dae0a\";","import React from \"react\";\n\nimport { Button } from \"@/components/Button\";\n\nimport * as styles from \"./Tags.module.scss\";\n\ntype Props = {\n  tags: string[];\n  tagSlugs: string[];\n};\n\nconst Tags = ({ tags, tagSlugs }: Props) => (\n  <div className={styles.tags}>\n    <ul className={styles.list}>\n      {tagSlugs\n        ? tagSlugs.map((slug, i) => (\n            <li className={styles.item} key={slug}>\n              <Button title={tags[i]} key={slug} to={slug} />\n            </li>\n          ))\n        : null}\n    </ul>\n  </div>\n);\n\nexport default Tags;\n","// extracted by mini-css-extract-plugin\nexport var item = \"Tags-module--item--52015\";\nexport var list = \"Tags-module--list--82ae6\";\nexport var tags = \"Tags-module--tags--18589\";","import React from \"react\";\n\nimport { Button } from \"@/components/Button\";\nimport { ThemeSwitcher } from \"@/components/ThemeSwitcher\";\nimport type { Node } from \"@/types\";\n\nimport { Comments } from \"./Comments\";\nimport { Content } from \"./Content\";\nimport { Meta } from \"./Meta\";\nimport { Tags } from \"./Tags\";\n\nimport * as styles from \"./Post.module.scss\";\n\ninterface Props {\n  post: Node;\n}\n\nconst Post: React.FC<Props> = ({ post }: Props) => {\n  const { html } = post;\n  const { tagSlugs } = post.fields;\n  const { tags, title, date } = post.frontmatter;\n\n  return (\n    <div className={styles.post}>\n      <div className={styles.buttons}>\n        <Button className={styles.buttonArticles} title=\"All Articles\" to=\"/\" />\n        <ThemeSwitcher />\n      </div>\n\n      <div className={styles.content}>\n        <Content body={html} title={title} />\n      </div>\n\n      <div className={styles.footer}>\n        <Meta date={date} />\n        {tags && tagSlugs && <Tags tags={tags} tagSlugs={tagSlugs} />}\n      </div>\n\n      <div className={styles.comments}>\n        <Comments />\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","// extracted by mini-css-extract-plugin\nexport var buttonArticles = \"Post-module--buttonArticles--d793a\";\nexport var buttons = \"Post-module--buttons--2972d\";\nexport var comments = \"Post-module--comments--d3b99\";\nexport var content = \"Post-module--content--3c6e5\";\nexport var footer = \"Post-module--footer--f8705\";\nexport var post = \"Post-module--post--3a994\";","import React from \"react\";\n\nimport { graphql } from \"gatsby\";\n\nimport { Layout } from \"@/components/Layout\";\nimport { Meta } from \"@/components/Meta\";\nimport { Post } from \"@/components/Post\";\nimport { useSiteMetadata } from \"@/hooks\";\nimport { Node } from \"@/types\";\n\ninterface Props {\n  data: {\n    markdownRemark: Node;\n  };\n}\n\nconst PostTemplate: React.FC<Props> = ({ data: { markdownRemark } }: Props) => (\n  <Layout>\n    <Post post={markdownRemark} />\n  </Layout>\n);\n\nexport const query = graphql`\n  query PostTemplate($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        slug\n        tagSlugs\n      }\n      frontmatter {\n        date\n        description\n        tags\n        title\n        socialImage {\n          publicURL\n        }\n      }\n    }\n  }\n`;\n\nexport const Head: React.FC<Props> = ({ data }) => {\n  const { title, subtitle, url } = useSiteMetadata();\n\n  const {\n    frontmatter: {\n      title: postTitle,\n      description: postDescription = \"\",\n      socialImage,\n    },\n  } = data.markdownRemark;\n\n  const description = postDescription || subtitle;\n  const image = socialImage?.publicURL && url.concat(socialImage?.publicURL);\n\n  return (\n    <Meta\n      title={`${postTitle} - ${title}`}\n      description={description}\n      image={image}\n    />\n  );\n};\n\nexport default PostTemplate;\n"],"names":["className","title","to","React","Link","cn","GiscusComments","containerRef","createRef","themeMode","useTheme","mode","useLayoutEffect","giscusScript","attributes","message","giscusEl","current","querySelector","setConfig","theme","contentWindow","postMessage","giscus","document","createElement","src","crossorigin","async","Object","entries","forEach","key","value","setAttribute","appendChild","ref","displayName","useSiteMetadata","body","dangerouslySetInnerHTML","__html","date","Date","toLocaleDateString","year","month","day","tags","tagSlugs","map","slug","i","Button","post","html","fields","frontmatter","ThemeSwitcher","Content","Meta","Tags","Comments","Head","data","subtitle","url","markdownRemark","postTitle","description","postDescription","socialImage","image","publicURL","concat","Layout","Post"],"sourceRoot":""}