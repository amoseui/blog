{"version":3,"file":"component---src-templates-post-template-post-template-tsx-b74f5911b3424361a53b.js","mappings":"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","sources":["webpack://blog/./src/components/Button/Button.tsx","webpack://blog/./src/components/Button/Button.module.scss","webpack://blog/./src/components/Post/Comments/GiscusComments/GiscusComments.tsx","webpack://blog/./src/components/Post/Comments/Comments.tsx","webpack://blog/./src/components/Post/Content/Content.tsx","webpack://blog/./src/components/Post/Content/Content.module.scss","webpack://blog/./src/components/Post/Meta/Meta.tsx","webpack://blog/./src/components/Post/Meta/Meta.module.scss","webpack://blog/./src/components/Post/Tags/Tags.tsx","webpack://blog/./src/components/Post/Tags/Tags.module.scss","webpack://blog/./src/components/Post/Post.tsx","webpack://blog/./src/components/Post/Post.module.scss","webpack://blog/./src/templates/PostTemplate/PostTemplate.tsx"],"sourcesContent":["import React from \"react\";\n\nimport cn from \"classnames\";\nimport { Link } from \"gatsby\";\n\nimport * as styles from \"./Button.module.scss\";\n\ninterface Props {\n  className?: string;\n  title: string;\n  to: string;\n}\n\nconst Button: React.FC<Props> = ({ className, title, to }: Props) => (\n  <Link className={cn(styles.button, className)} to={to}>\n    {title}\n  </Link>\n);\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport var button = \"Button-module--button--b1113\";","import React, { createRef, useLayoutEffect } from \"react\";\n\nimport { useTheme } from \"@/hooks\";\n\nconst src = \"https://giscus.app/client.js\";\nconst giscusSelector = \"iframe.giscus-frame\";\n\nconst GiscusComments: React.FC = () => {\n  const containerRef = createRef();\n\n  const [{ mode }] = useTheme();\n  const themeMode = mode === \"dark\" ? \"dark\" : \"light\";\n\n  useLayoutEffect(() => {\n    const createGiscusEl = () => {\n      const giscusScript = document.createElement(\"script\");\n\n      const attributes = {\n        src,\n        \"data-repo\": \"amoseui/blog\",\n        \"data-repo-id\": \"MDEwOlJlcG9zaXRvcnk0MjM4NTYyNw==\",\n        \"data-category\": \"Comments\",\n        \"data-category-id\": \"DIC_kwDOAobA284CXVz8\",\n        \"data-mapping\": \"pathname\",\n        \"data-strict\": \"0\",\n        \"data-reactions-enabled\": \"1\",\n        \"data-emit-metadata\": \"0\",\n        \"data-input-position\": \"bottom\",\n        \"data-theme\": themeMode,\n        \"data-lang\": \"en\",\n        crossorigin: \"anonymous\",\n        async: \"true\",\n      };\n\n      Object.entries(attributes).forEach(([key, value]) => {\n        giscusScript.setAttribute(key, value);\n      });\n\n      if (containerRef.current) {\n        containerRef.current.appendChild(giscusScript);\n      }\n    };\n\n    const giscusEl = containerRef.current.querySelector(giscusSelector);\n    const postThemeMessage = () => {\n      const message = {\n        setConfig: {\n          theme: themeMode,\n        },\n      };\n      giscusEl.contentWindow.postMessage(\n        { giscus: message },\n        \"https://giscus.app\",\n      );\n    };\n\n    if (giscusEl) {\n      postThemeMessage();\n    } else {\n      createGiscusEl();\n    }\n  }, [themeMode]);\n\n  return <div ref={containerRef} />;\n};\n\nGiscusComments.displayName = \"GiscusComments\";\n\nexport default GiscusComments;\n","import React from \"react\";\n\nimport { useSiteMetadata } from \"@/hooks\";\n\nimport { GiscusComments } from \"./GiscusComments\";\n\nconst Comments: React.FC = () => {\n  const { giscus } = useSiteMetadata();\n\n  if (!giscus) {\n    return null;\n  }\n\n  return <GiscusComments />;\n};\n\nexport default Comments;\n","import React from \"react\";\n\nimport * as styles from \"./Content.module.scss\";\n\ninterface Props {\n  title: string;\n  body: string;\n}\n\nconst Content: React.FC<Props> = ({ body, title }: Props) => (\n  <div className={styles.content}>\n    <h1 className={styles.title}>{title}</h1>\n    <div className={styles.body} dangerouslySetInnerHTML={{ __html: body }} />\n  </div>\n);\n\nexport default Content;\n","// extracted by mini-css-extract-plugin\nexport var body = \"Content-module--body--726c2\";\nexport var content = \"Content-module--content--80d58\";\nexport var title = \"Content-module--title--09504\";","import React from \"react\";\n\nimport * as styles from \"./Meta.module.scss\";\n\ninterface Props {\n  date: string;\n}\n\nconst Meta: React.FC<Props> = ({ date }: Props) => (\n  <div className={styles.meta}>\n    <p className={styles.date}>\n      Published{\" \"}\n      {new Date(date).toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      })}\n    </p>\n  </div>\n);\n\nexport default Meta;\n","// extracted by mini-css-extract-plugin\nexport var date = \"Meta-module--date--4d30d\";\nexport var meta = \"Meta-module--meta--dae0a\";","import React from \"react\";\n\nimport { Button } from \"@/components/Button\";\n\nimport * as styles from \"./Tags.module.scss\";\n\ntype Props = {\n  tags: string[];\n  tagSlugs: string[];\n};\n\nconst Tags = ({ tags, tagSlugs }: Props) => (\n  <div className={styles.tags}>\n    <ul className={styles.list}>\n      {tagSlugs\n        ? tagSlugs.map((slug, i) => (\n            <li className={styles.item} key={slug}>\n              <Button title={tags[i]} key={slug} to={slug} />\n            </li>\n          ))\n        : null}\n    </ul>\n  </div>\n);\n\nexport default Tags;\n","// extracted by mini-css-extract-plugin\nexport var item = \"Tags-module--item--52015\";\nexport var list = \"Tags-module--list--82ae6\";\nexport var tags = \"Tags-module--tags--18589\";","import React from \"react\";\n\nimport { Button } from \"@/components/Button\";\nimport { ThemeSwitcher } from \"@/components/ThemeSwitcher\";\nimport type { Node } from \"@/types\";\n\nimport { Comments } from \"./Comments\";\nimport { Content } from \"./Content\";\nimport { Meta } from \"./Meta\";\nimport { Tags } from \"./Tags\";\n\nimport * as styles from \"./Post.module.scss\";\n\ninterface Props {\n  post: Node;\n}\n\nconst Post: React.FC<Props> = ({ post }: Props) => {\n  const { html } = post;\n  const { tagSlugs } = post.fields;\n  const { tags, title, date } = post.frontmatter;\n\n  return (\n    <div className={styles.post}>\n      <div className={styles.buttons}>\n        <Button className={styles.buttonArticles} title=\"All Articles\" to=\"/\" />\n        <ThemeSwitcher />\n      </div>\n\n      <div className={styles.content}>\n        <Content body={html} title={title} />\n      </div>\n\n      <div className={styles.footer}>\n        <Meta date={date} />\n        {tags && tagSlugs && <Tags tags={tags} tagSlugs={tagSlugs} />}\n      </div>\n\n      <div className={styles.comments}>\n        <Comments />\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","// extracted by mini-css-extract-plugin\nexport var buttonArticles = \"Post-module--buttonArticles--d793a\";\nexport var buttons = \"Post-module--buttons--2972d\";\nexport var comments = \"Post-module--comments--d3b99\";\nexport var content = \"Post-module--content--3c6e5\";\nexport var footer = \"Post-module--footer--f8705\";\nexport var post = \"Post-module--post--3a994\";","import React from \"react\";\n\nimport { graphql } from \"gatsby\";\n\nimport { Layout } from \"@/components/Layout\";\nimport { Meta } from \"@/components/Meta\";\nimport { Post } from \"@/components/Post\";\nimport { useSiteMetadata } from \"@/hooks\";\nimport { Node } from \"@/types\";\n\ninterface Props {\n  data: {\n    markdownRemark: Node;\n  };\n}\n\nconst PostTemplate: React.FC<Props> = ({ data: { markdownRemark } }: Props) => (\n  <Layout>\n    <Post post={markdownRemark} />\n  </Layout>\n);\n\nexport const query = graphql`\n  query PostTemplate($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        slug\n        tagSlugs\n      }\n      frontmatter {\n        date\n        description\n        tags\n        title\n        socialImage {\n          publicURL\n        }\n      }\n    }\n  }\n`;\n\nexport const Head: React.FC<Props> = ({ data }) => {\n  const { title, subtitle, url } = useSiteMetadata();\n\n  const {\n    frontmatter: {\n      title: postTitle,\n      description: postDescription = \"\",\n      socialImage,\n    },\n  } = data.markdownRemark;\n\n  const description = postDescription || subtitle;\n  const image = socialImage?.publicURL && url.concat(socialImage?.publicURL);\n\n  return (\n    <Meta\n      title={`${postTitle} - ${title}`}\n      description={description}\n      image={image}\n    />\n  );\n};\n\nexport default PostTemplate;\n"],"names":["_ref","className","title","to","React","Link","cn","GiscusComments","containerRef","createRef","mode","useTheme","themeMode","useLayoutEffect","giscusEl","current","querySelector","postThemeMessage","message","setConfig","theme","contentWindow","postMessage","giscus","createGiscusEl","giscusScript","document","createElement","attributes","src","crossorigin","async","Object","entries","forEach","key","value","setAttribute","appendChild","ref","displayName","Comments","useSiteMetadata","body","dangerouslySetInnerHTML","__html","date","Date","toLocaleDateString","year","month","day","tags","tagSlugs","map","slug","i","Button","post","html","fields","frontmatter","ThemeSwitcher","Content","Meta","Tags","Head","_ref2","data","subtitle","url","postTitle","description","postDescription","socialImage","markdownRemark","image","publicURL","concat","Layout","Post"],"sourceRoot":""}